{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let ClothingService = /*#__PURE__*/(() => {\n  class ClothingService {\n    constructor(http) {\n      this.http = http;\n      this.baseUrl = 'https://api-myc.onrender.com';\n    }\n    getClothingItems() {\n      const token = localStorage.getItem('auth_token');\n      const headers = new HttpHeaders({\n        'Authorization': `Bearer ${token}`\n      });\n      return this.http.get(`${this.baseUrl}/clothing-items/`, {\n        headers\n      });\n    }\n    addClothingItem(name, description, imageUrl, categoryId) {\n      const userId = localStorage.getItem('user_id');\n      console.log(localStorage);\n      console.log(\"USER ID : \", userId);\n      if (!userId) {\n        throw new Error('UserID not found');\n      }\n      const clothingItem = {\n        name,\n        description,\n        image_url: imageUrl,\n        category_id: categoryId,\n        user_id: +userId\n      };\n      return this.http.post(`${this.baseUrl}/new-clothing/`, clothingItem);\n    }\n    getClothingCategories() {\n      return this.http.get(`${this.baseUrl}/clothing-categories/`);\n    }\n    getClothingItemById(id) {\n      return this.http.get(`${this.baseUrl}/clothing-items/${id}`);\n    }\n    static #_ = this.ɵfac = function ClothingService_Factory(t) {\n      return new (t || ClothingService)(i0.ɵɵinject(i1.HttpClient));\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: ClothingService,\n      factory: ClothingService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return ClothingService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}